/**
 * @packageDocumentation
 * @module api.functional.debug.pipelines
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller DebugController.getAllPipelines
 * @path GET /debug/pipelines
 * @accessor api.functional.debug.pipelines.getAllPipelines
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAllPipelines(
  connection: IConnection,
): Promise<getAllPipelines.Output> {
  return PlainFetcher.fetch(connection, {
    ...getAllPipelines.METADATA,
    template: getAllPipelines.METADATA.path,
    path: getAllPipelines.path(),
  });
}
export namespace getAllPipelines {
  export type Output =
    | {
        id: string;
        name: string;
        projectId: string;
        ecrImageUri?: null | undefined | string;
        hasImage: boolean;
      }[]
    | {
        error: string;
      };

  export const METADATA = {
    method: "GET",
    path: "/debug/pipelines",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/debug/pipelines";
}
