/**
 * @packageDocumentation
 * @module api.functional.github_app.debug.installations
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @tag github-app
 * @summary [디버그] GitHub App 설치 상태 확인
 * @description 현재 DB에 저장된 모든 GitHub App 설치 정보와 사용자 정보를 조회합니다
 * @controller GithubAppController.debugInstallations
 * @path GET /github-app/debug/installations
 * @accessor api.functional.github_app.debug.installations.debugInstallations
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function debugInstallations(
  connection: IConnection,
): Promise<debugInstallations.Output> {
  return PlainFetcher.fetch(connection, {
    ...debugInstallations.METADATA,
    template: debugInstallations.METADATA.path,
    path: debugInstallations.path(),
  });
}
export namespace debugInstallations {
  export type Output = {
    installations: any[];
    users: any[];
    totalInstallations: number;
    totalUsers: number;
  };

  export const METADATA = {
    method: "GET",
    path: "/github-app/debug/installations",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/github-app/debug/installations";
}
