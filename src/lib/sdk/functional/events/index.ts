/**
 * @packageDocumentation
 * @module api.functional.events
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

export * as check from "./check/index";
export * as process from "./process/index";

/**
 * @controller EventBridgeController.test
 * @path POST /events/test
 * @accessor api.functional.events.test
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function test(connection: IConnection): Promise<test.Output> {
  return PlainFetcher.fetch(connection, {
    ...test.METADATA,
    template: test.METADATA.path,
    path: test.path(),
  });
}
export namespace test {
  export type Output = {
    success: boolean;
    message: string;
    eventBridgeEnabled: boolean;
    timestamp: string;
  };

  export const METADATA = {
    method: "POST",
    path: "/events/test",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/events/test";
}
