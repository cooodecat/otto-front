/**
 * @packageDocumentation
 * @module api.functional.events.check
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller EventBridgeController.checkDuplicate
 * @path POST /events/check
 * @accessor api.functional.events.check.checkDuplicate
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function checkDuplicate(
  connection: IConnection,
  body: checkDuplicate.Body,
): Promise<checkDuplicate.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...checkDuplicate.METADATA,
      template: checkDuplicate.METADATA.path,
      path: checkDuplicate.path(),
    },
    body,
  );
}
export namespace checkDuplicate {
  export type Body = {
    eventId: string;
  };
  export type Output = {
    isDuplicate: boolean;
  };

  export const METADATA = {
    method: "POST",
    path: "/events/check",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/events/check";
}
