/**
 * @packageDocumentation
 * @module api.functional.test_logs.recover_logs
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller TestLogsController.recoverLogs
 * @path POST /test-logs/recover-logs/:executionId
 * @accessor api.functional.test_logs.recover_logs.recoverLogs
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function recoverLogs(
  connection: IConnection,
  executionId: string,
): Promise<recoverLogs.Output> {
  return PlainFetcher.fetch(connection, {
    ...recoverLogs.METADATA,
    template: recoverLogs.METADATA.path,
    path: recoverLogs.path(executionId),
  });
}
export namespace recoverLogs {
  export type Output = {
    success: boolean;
    logsRecovered: number;
    message: string;
  };

  export const METADATA = {
    method: "POST",
    path: "/test-logs/recover-logs/:executionId",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = (executionId: string) =>
    `/test-logs/recover-logs/${encodeURIComponent(executionId?.toString() ?? "null")}`;
}
