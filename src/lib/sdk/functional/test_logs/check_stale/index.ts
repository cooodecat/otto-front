/**
 * @packageDocumentation
 * @module api.functional.test_logs.check_stale
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller TestLogsController.checkStaleExecutions
 * @path POST /test-logs/check-stale
 * @accessor api.functional.test_logs.check_stale.checkStaleExecutions
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function checkStaleExecutions(
  connection: IConnection,
): Promise<checkStaleExecutions.Output> {
  return PlainFetcher.fetch(connection, {
    ...checkStaleExecutions.METADATA,
    template: checkStaleExecutions.METADATA.path,
    path: checkStaleExecutions.path(),
  });
}
export namespace checkStaleExecutions {
  export type Output = {
    checked: number;
    updated: number;
    message: string;
  };

  export const METADATA = {
    method: "POST",
    path: "/test-logs/check-stale",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/test-logs/check-stale";
}
